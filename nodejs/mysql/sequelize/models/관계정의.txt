User 모델과 Comment 모델 간의 관계

1:N 관계 (사용자 한명이 댓글을 여러개 작성이 가능)

이걸 시퀄라이즈에서 표현하는 방법
     (users)       (comments)
        1       :       N
          ▶▶▶▶▶▶▶
              hasMany

          ◀◀◀◀◀◀◀
              belongTo

belongTo가 있는 테이블에 요청한 컬럼이 생긴다.
- 예시

static.associate(db){
    db.User.hasMany(db.Comment,{foreignKey : "commenter", sourceKey : "id"});
}
// User 테이블 컬럼 id 값을 Comment 테이블 commenter 컬럼이 참조하고있다. 
// User 테이블

static.associate(db){
    db.Comment.belongTo(db.User,{foreignKey : "commenter", targetKey: "id"});
}
// Comment 테이블
// 요청한 테이블의 명은 commenter 이다.



다대다 관계
 n : m

 중간에 다른 테이블을 만들어줘야한다.

 - 예시

 Post                Hashtag
 -------------       --------------            
 id | content|       | id | title |
 -------------       --------------
 1  | #a #b  |       |  1 |  a    |
 2  | #a     |       |  2 |  b    |
 3  | #d     |       |  3 |  c    |
 -------------       --------------

이런 두개의 테이블의 다대다 관계를 정리 할때는

db.Post.belongToMany(db.Hashtag, {through : "PostHashtag"});
db.Hashtag.belongToMany(db.Post, {through : "PostHashtag"});
이렇게 하면 중간테이블이 하나 만들어진다.

PostHashtag
 -------------------              
 postid | hashtagid|     
 -------------------  
 1      | 1        |    
 1      | 2        |     
 2      | 1        |     
 3      | 3        |
 ------------------- 